{
  "about": {
    "loadingError": "Failed to load about content...",
    "aboutTitle": "About",
    "aboutDescription": "You can set the about content in the settings page, supports HTML & Markdown",
    "projectRepo": "Project repository:"
  },
  "registerForm": {
    "enterEmail": "Please enter your email",
    "turnstileError": "Please try again in a few seconds, Turnstile is checking the user environment!",
    "usernameRequired": "Username is required",
    "passwordRequired": "Password is required",
    "confirmPasswordRequired": "Confirm password is required",
    "passwordsNotMatch": "Passwords do not match",
    "validEmailRequired": "Must be a valid email address",
    "emailRequired": "Email is required",
    "verificationCodeRequired": "Verification code is required",
    "resendCode": "Resend({{countdown}})",
    "getCode": "Get verification code",
    "verificationInfo": "Please try again in a few seconds, Turnstile is checking the user environment!"
  },
  "registerPage": {
    "alreadyHaveAccount": "Already have an account? Click to login"
  },
  "topupPage": {
    "alertMessage": "Please check the recharge records and invitation records in the logs. For recharge records, select the type [Recharge] in the log; for invitation records, select [System] in the log."
  },
  "logPage": {
    "title": "Logs",
    "refreshButton": "Refresh/Clear Search",
    "searchButton": "Search",
    "timeLabel": "Time",
    "channelLabel": "Channel",
    "userLabel": "User",
    "tokenLabel": "Token",
    "typeLabel": "Type",
    "modelLabel": "Model",
    "durationLabel": "Duration",
    "inputLabel": "Input",
    "outputLabel": "Output",
    "quotaLabel": "Quota",
    "detailLabel": "Detail",
    "searchLogsInfo": "Please check the recharge records and invitation records in the logs. For recharge records, select the type [Recharge] in the log; for invitation records, select [System] in the log."
  },
  "tableToolBar": {
    "tokenName": "Token Name",
    "modelName": "Model Name",
    "startTime": "Start Time",
    "endTime": "End Time",
    "type": "Type",
    "channelId": "Channel ID",
    "channelIdPlaceholder": "Channel ID",
    "taskId": "Task ID",
    "taskIdPlaceholder": "Task ID",
    "username": "Username"
  },
  "redemptionPage": {
    "pageTitle": "Redemption Management",
    "createRedemptionCode": "Create Redemption Code",
    "successMessage": "Operation successful",
    "searchPlaceholder": "Search redemption code...",
    "refreshButton": "Refresh",
    "headLabels": {
      "id": "ID",
      "name": "Name",
      "status": "Status",
      "quota": "Quota",
      "createdTime": "Created Time",
      "redeemedTime": "Redeemed Time",
      "action": "Action"
    }
  },
  "topupCard": {
    "topup": "Top up",
    "topupsuccess": "Top up successful!",
    "amount": "Top up amount",
    "currentQuota": "Current quota",
    "onlineTopup": "Online top-up",
    "inputLabel": "Redemption code",
    "inputPlaceholder": "Enter redemption code!",
    "exchangeButton": {
      "default": "Exchange",
      "submitting": "Submitting"
    },
    "selectPaymentMethod": "Select payment method",
    "amountMinLimit": "Amount cannot be less than",
    "amountMaxLimit": "Amount cannot exceed 1000000",
    "positiveIntegerAmount": "Please enter a positive integer amount",
    "topupAmount": "Top up amount",
    "discountedPrice": "Discounted price",
    "fee": "Fee",
    "actualAmountToPay": "Actual amount to pay",
    "adminSetupRequired": "Admin setup required!",
    "redemptionCodeTopup": "Redemption code top-up",
    "noRedemptionCodeText": "No redemption code yet? Click to get redemption code:",
    "getRedemptionCode": "Get redemption code",
    "exchangeRate": "Exchange rate"
  },
  "inviteCard": {
    "inviteReward": "Invite Reward",
    "inviteDescription": "Share your invite link, invite friends to register, and get rewarded!",
    "inviteUrlLabel": "Invite Link",
    "generateInvite": "Generate Invite Link",
    "copyButton": {
      "copy": "Copy",
      "generate": "Generate"
    }
  },
  "midjourneyPage": {
    "midjourney": "Midjourney",
    "refreshClearSearch": "Refresh / Clear Search Criteria",
    "search": "Search",
    "taskID": "Task ID",
    "submitTime": "Submit Time",
    "channel": "Channel",
    "user": "User",
    "type": "Type",
    "submissionResult": "Submission Result",
    "taskStatus": "Task Status",
    "progress": "Progress",
    "resultImage": "Result Image",
    "prompt": "Prompt",
    "promptEn": "PromptEn",
    "failureReason": "Failure Reason"
  },
  "analytics": "Analytics",
  "analytics_index": {
    "active": "Active",
    "averageLatency": "Average Latency",
    "channelCount": "Channel Count",
    "consumptionStatistics": "Consumption Statistics",
    "directRegistration": "Direct Registration",
    "disabled": "Disabled",
    "endTime": "End Time",
    "invitationRegistration": "Invitation Registration",
    "redeemCodeIssued": "Redeem Code Issued",
    "redemptionStatistics": "Redemption Statistics",
    "registrationStatistics": "Registration Statistics",
    "requestsCount": "Requests Count",
    "startTime": "Start Time",
    "testDisabled": "Test Disabled",
    "tokensStatistics": "Tokens Statistics",
    "totalUserBalance": "Total User Balance",
    "totalUserSpending": "Total User Spending",
    "totalUsers": "Total Users",
    "unused": "Unused",
    "used": "Used"
  },
  "channel": "Channel",
  "channel_index": {
    "actions": "Actions",
    "all": "All",
    "batchProcessing": "Batch Processing",
    "channel": "Channel",
    "channelList": "Channel List",
    "channelName": "Channel Name",
    "channelTags": "Channel Tags",
    "channelType": "Channel Type",
    "deleteDisabledChannels": "Delete Disabled Channels",
    "description1": "1. The larger the priority, the higher the priority of use; (only when all nodes under this priority are frozen or disabled, will the lower priority nodes be used)",
    "description2": "2. Under the same priority: Load balancing based on weight (weighted random selection)",
    "description3": "3. If 'Retry Times' and 'Retry Interval' are set in Settings - General Settings, retries will occur after a failure.",
    "description4": "4. Retry logic: 1) Retry in nodes with higher priority first. If all nodes in higher priority are frozen, retries will be attempted in nodes with lower priority. 2) If 'Retry Interval' is set, a channel will be frozen for a period after a failure, and no one will use this channel until the freezing time ends. 3) After the retry times are used up, it will end directly.",
    "disabled": "Disabled",
    "enabled": "Enabled",
    "filterTags": "Filter Tags",
    "group": "Group",
    "model": "Model",
    "modelName": "Model Name",
    "name": "Name",
    "newChannel": "New Channel",
    "otherParameters": "Other Parameters",
    "priority": "Priority",
    "priorityWeightExplanation": "Priority/Weight Explanation:",
    "refreshClearSearchConditions": "Refresh/Clear Search Conditions",
    "responseTime": "Response Time",
    "search": "Search",
    "showAll": "Show All",
    "speedTestDisabled": "Speed Test Disabled",
    "status": "Status",
    "supplier": "Supplier",
    "tags": "Tags",
    "testAllChannels": "Test All Channels",
    "testModel": "Test Model",
    "type": "Type",
    "updateEnabledBalance": "Update Enabled Balance",
    "usedBalance": "Used Balance/Remaining Balance",
    "weight": "Weight"
  },
  "dashboard": "Dashboard",
  "dashboard_index": {
    "balance": "Balance",
    "calls": "Calls",
    "model_name": "Model Name",
    "model_price": "Available Models",
    "no_data": "No Data",
    "no_data_available": "No data available",
    "other_models": "Other Models",
    "statistics": "Statistics",
    "today_consumption": "Today's Consumption",
    "today_requests": "Today's Requests",
    "today_tokens": "Today's Tokens",
    "unknown": "Unknown",
    "used": "Used"
  },
  "description": "All-in-one OpenAI interface\nIntegrates various API access methods\nOne-click deployment, ready to use",
  "footer": {
    "basedOn": "Based on",
    "developedBy": "Developed by",
    "license": "MIT License",
    "sourceCode": "Source code under"
  },
  "log": "Log",
  "login": {
    "password": "Password",
    "passwordRequired": "Password is required",
    "usernameOrEmail": "Username/Email",
    "usernameRequired": "Username/Email is required"
  },
  "menu": {
    "about": "About",
    "console": "Console",
    "error": "Error",
    "home": "Home",
    "login": "Login",
    "signout": "Signout",
    "signup": "Signup",
    "unknownVersion": "Unknown Version",
    "welcomeBack": "Welcome Back"
  },
  "model_price": "Model Price",
  "modelpricePage": {
    "model": "Model Name",
    "type": "Type",
    "channelType": "Supplier",
    "inputMultiplier": "Input Multiplier",
    "outputMultiplier": "Output Multiplier",
    "availableModels": "Available Models"
  },
  "payment": "Payment",
  "paymentPage": {
    "orderList": "Order List",
    "gatewaySettings": "Gateway Settings"
  },
  "paymentGatewayPage": {
    "title": "Payment Gateway",
    "createPayment": "Create Payment",
    "refreshClear": "Refresh/Clear Search Conditions",
    "search": "Search",
    "tableHeaders": {
      "id": "ID",
      "uuid": "UUID",
      "name": "Name",
      "type": "Type",
      "icon": "Icon",
      "fixedFee": "Fixed Fee",
      "percentFee": "Percent Fee",
      "sort": "Sort",
      "enable": "Enable",
      "createdAt": "Created At",
      "action": "Action"
    }
  },
  "orderlogPage": {
    "title": "Logs",
    "refreshClear": "Refresh/Clear Search Conditions",
    "search": "Search",
    "tableHeaders": {
      "created_at": "Time",
      "gateway_id": "Payment Gateway",
      "user_id": "User",
      "trade_no": "Order Number",
      "gateway_no": "Gateway Order Number",
      "amount": "Recharge Amount",
      "fee": "Fee",
      "discount": "Discount Amount",
      "order_amount": "Actual Payment Amount",
      "quota": "Credited Points",
      "status": "Status"
    },
    "gatewayIdLabel": "Gateway ID",
    "userIdLabel": "User ID",
    "tradeNoLabel": "Order Number",
    "gatewayNoLabel": "Gateway Order Number",
    "startTimeLabel": "Start Time",
    "endTimeLabel": "End Time",
    "statusLabel": "Status",
    "placeholder": {
      "gatewayId": "Gateway ID",
      "userId": "User ID",
      "tradeNo": "Order Number",
      "gatewayNo": "Gateway Order Number"
    },
    "statusOptions": {
      "status1": "Status 1",
      "status2": "Status 2",
      "status3": "Status 3"
    }
  },
  "pricing": "Pricing",
  "pricingPage": {
    "currencyInfo1": "USD",
    "currencyInfo2": ": 1 === $0.002 / 1K tokens",
    "currencyInfo3": "CNY",
    "currencyInfo4": ": 1 === ￥0.014 / 1k tokens",
    "currencyInfo5": "Example",
    "currencyInfo6": ": gpt-4 Input: $0.03 / 1K tokens Completion: $0.06 / 1K tokens",
    "currencyInfo7": "0.03 / 0.002 = 15, 0.06 / 0.002 = 30, input multiplier is 15, completion multiplier is 30",
    "noPriceModelWarning": "There are models without configured prices, please configure the prices in time:",
    "errPricesWarning": "There are models with incorrect supplier types, please configure them in time:",
    "newButton": "New",
    "refreshButton": "Refresh",
    "updatePricesButton": "Update Prices",
    "singleOperation": "Single Operation",
    "multipleOperation": "Multiple Operation"
  },
  "profile": "Profile",
  "profilePage": {
    "personalInfo": "Personal Information",
    "username": "Username",
    "displayName": "Display Name",
    "password": "Password",
    "usernameRequired": "Username cannot be empty",
    "usernameMinLength": "Username must be at least 3 characters long",
    "passwordMinLength": "Password must be at least 8 characters long",
    "token": "Token",
    "wechatBindSuccess": "WeChat account successfully bound!",
    "updateSuccess": "User information updated successfully!",
    "notBound": "Not Bound",
    "inputUsernamePlaceholder": "Enter username",
    "inputPasswordPlaceholder": "Enter password",
    "inputDisplayNamePlaceholder": "Enter display name",
    "submit": "Submit",
    "other": "Other",
    "accountBinding": "Account Binding",
    "bindWechatAccount": "Bind WeChat Account",
    "bindGitHubAccount": "Bind GitHub Account",
    "bindLarkAccount": "Bind Lark Account",
    "changeEmail": "Change Email",
    "bindEmail": "Bind Email",
    "generateToken": "Generate Access Token",
    "resetToken": "Reset Access Token",
    "lark": "Lark",
    "tokenNotice": "Note: Tokens generated here are for system management, not for accessing OpenAI services.",
    "yourTokenIs": "Your access token is:",
    "keepSafe": "Keep it safe. Reset immediately if leaked."
  },
  "redemption": "Redemption",
  "setting": "Setting",
  "setting_index": {
    "operationSettings": {
      "chatLinkSettings": {
        "title": "Chat Link Settings",
        "info": "Configure chat links, which take effect in the chat of the token and in the chat of the Playground on the homepage. <br />In the link, &#123;key&#125; can replace the user's token, and &#123;server&#125; can replace the server address. For example: {'https://chat.oneapi.pro/#/?settings={\"key\":\"sk-{key}\",\"url\":\"{server}\"}'}<br />If not configured, the following 4 links will be configured by default:<br />ChatGPT Next ： {'https://chat.oneapi.pro/#/?settings={\"key\":\"{key}\",\"url\":\"{server}\"}'}<br />chatgpt-web-midjourney-proxy ： {'https://vercel.ddaiai.com/#/?settings={\"key\":\"{key}\",\"url\":\"{server}\"}'}<br />AMA ： {'ama://set-api-key?server={server}&key={key}'}<br />opencat ： {'opencat://team/join?domain={server}&token={key}'}<br />Sorting rules: The larger the value, the higher the ranking, and the same value is sorted according to the configuration order",
        "save": "Save Chat Link Settings"
      },
      "generalSettings": {
        "title": "General Settings",
        "topUpLink": {
          "label": "Top-up Link",
          "placeholder": "For example, the purchase link of the card issuing website"
        },
        "chatLink": {
          "label": "Chat Link",
          "placeholder": "For example, the deployment address of ChatGPT Next Web"
        },
        "quotaPerUnit": {
          "label": "Quota Per Unit",
          "placeholder": "The quota that can be exchanged for one unit of currency"
        },
        "retryTimes": {
          "label": "Retry Times",
          "placeholder": "Number of retries"
        },
        "retryCooldownSeconds": {
          "label": "Retry Cooldown (seconds)",
          "placeholder": "Retry cooldown (seconds)"
        },
        "displayInCurrency": "Display quota in currency",
        "displayTokenStat": "Show token quota instead of user quota for billing related APIs",
        "approximateToken": "Use approximate method to estimate token count to reduce computation",
        "saveButton": "Save General Settings"
      },
      "logSettings": {
        "title": "Log Settings",
        "logConsume": "Enable Log Consumption",
        "logCleanupTime": {
          "label": "Log Cleanup Time",
          "placeholder": "Log Cleanup Time"
        },
        "clearLogs": "Clear Historical Logs"
      },
      "monitoringSettings": {
        "title": "Monitoring Settings",
        "channelDisableThreshold": {
          "label": "Maximum Response Time",
          "placeholder": "In seconds, if all running channels exceed this time, the channel will be automatically disabled"
        },
        "quotaRemindThreshold": {
          "label": "Quota Reminder Threshold",
          "placeholder": "When below this quota, an email will be sent to remind the user"
        },
        "automaticDisableChannel": "Automatically Disable Channel on Failure",
        "automaticEnableChannel": "Automatically Enable Channel on Success",
        "saveMonitoringSettings": "Save Monitoring Settings"
      },
      "otherSettings": {
        "title": "Other Settings",
        "mjNotify": "Midjourney allows callbacks (will expose server IP address)",
        "chatCache": "Enable chat cache (if Redis is not enabled, it will be stored in the database)",
        "chatCacheExpireMinute": {
          "label": "Cache Expiry Time (minutes)",
          "placeholder": "Cache expiry time when caching is enabled"
        },
        "alert": "When users use the vision model and provide an image link, our server needs to download these images and calculate tokens. To protect the server's IP address from being exposed when downloading images, you can configure a proxy below. This proxy configuration uses HTTP or SOCKS5 proxy. If you are an individual user, you can ignore this configuration. The proxy format is http://127.0.0.1:1080 or socks5://127.0.0.1:1080",
        "chatImageRequestProxy": {
          "label": "Image Detection Proxy",
          "placeholder": "Chat image detection proxy settings, may leak server IP if not set"
        },
        "saveButton": "Save Other Settings"
      },
      "paymentSettings": {
        "title": "Payment Settings",
        "alert": "Payment Settings: <br />1. USD Exchange Rate: Used to calculate the amount of recharge in USD <br />2. Minimum Recharge Amount (USD): Minimum recharge amount, in USD, enter an integer <br />3. All pages are calculated in USD, and the actual currency paid by the user is converted according to the currency set by the payment gateway <br />For example: A gateway sets the currency as CNY, the user pays 100 USD, then the actual payment amount is 100 * USD exchange rate <br />B gateway sets the currency as USD, the user pays 100 USD, then the actual payment amount is 100 USD",
        "usdRate": {
          "label": "USD Exchange Rate",
          "placeholder": "e.g., 7.3"
        },
        "minAmount": {
          "label": "Minimum Recharge Amount (USD)",
          "placeholder": "e.g., 1, then the minimum recharge amount is 1 USD, please enter an integer"
        },
        "discountInfo": "Fixed Amount Recharge Discount Example: <br />It is a JSON text, the key is the recharge amount, and the value is the discount. For example, &#123;&quot;10&quot;:0.9&#125; means that a recharge of 10 USD is calculated at a 10% discount <br />Calculation formula: actual cost = (original value * discount + original value * discount * fee rate) * exchange rate",
        "discount": {
          "label": "Fixed Amount Recharge Discount",
          "placeholder": "It is a JSON text, the key is the recharge amount, and the value is the discount"
        },
        "save": "Save Payment Settings"
      },
      "quotaSettings": {
        "title": "Quota Settings",
        "quotaForNewUser": {
          "label": "Initial Quota for New Users",
          "placeholder": "e.g., 100"
        },
        "preConsumedQuota": {
          "label": "Pre-consumed Quota for Requests",
          "placeholder": "Adjustable after the request ends"
        },
        "quotaForInviter": {
          "label": "Reward Quota for Inviter",
          "placeholder": "e.g., 2000"
        },
        "quotaForInvitee": {
          "label": "Reward Quota for Invitee",
          "placeholder": "e.g., 1000"
        },
        "saveQuotaSettings": "Save Quota Settings"
      },
      "rateSettings": {
        "title": "Rate Settings",
        "groupRatio": {
          "label": "Group Ratio",
          "placeholder": "It is a JSON text, the key is the group name, and the value is the ratio"
        },
        "save": "Save Rate Settings"
      },
      "title": "Operation Settings"
    },
    "otherSettings": {
      "title": "Other Settings",
      "generalSettings": {
        "title": "General Settings",
        "currentVersion": "Current Version",
        "checkUpdate": "Check Update",
        "noticeLabel": "Notice",
        "noticePlaceholder": "Enter new notice content here, supports Markdown & HTML code",
        "saveNotice": "Save Notice"
      },
      "customSettings": {
        "title": "Personalization Settings",
        "systemNameLabel": "System Name",
        "systemNamePlaceholder": "Enter system name here",
        "setSystemName": "Set System Name",
        "logoLabel": "Logo Image URL",
        "logoPlaceholder": "Enter Logo Image URL here",
        "setLogo": "Set Logo",
        "homePageContentLabel": "Home Page Content",
        "homePageContentPlaceholder": "Enter home page content here, supports Markdown & HTML code. Once set, the home page status information will no longer be displayed. If a link is entered, it will be used as the src attribute of the iframe, allowing you to set any web page as the home page.",
        "saveHomePageContent": "Save Home Page Content",
        "aboutLabel": "About",
        "aboutPlaceholder": "Enter new about content here, supports Markdown & HTML code. If a link is entered, it will be used as the src attribute of the iframe, allowing you to set any web page as the about page.",
        "saveAbout": "Save About",
        "copyrightWarning": "Removing the One API copyright must be authorized first. Maintaining the project requires a lot of effort. If this project is meaningful to you, please support it.",
        "footerLabel": "Footer Settings",
        "footerPlaceholder": "Enter new footer here, leave blank to use the default footer, supports HTML code",
        "setFooter": "Set Footer"
      },
      "updateDialog": {
        "newVersion": "New Version",
        "close": "Close",
        "viewGitHub": "View on GitHub"
      }
    },
    "systemSettings": {
      "configureEmailDomainWhitelist": {
        "title": "Configure Email Domain Whitelist",
        "subTitle": "Prevent malicious users from registering with temporary email addresses",
        "emailDomainRestriction": "Enable Email Domain Whitelist",
        "allowedEmailDomains": "Allowed Email Domains",
        "save": "Save Email Domain Whitelist Settings"
      },
      "configureFeishuAuthorization": {
        "title": "Configure Feishu Authorization",
        "subTitle": "To support login and registration via Feishu.",
        "manageLink": "Click here",
        "manage": "Manage your Feishu app",
        "alert1": "Enter Homepage URL",
        "alert2": "and Redirect URL",
        "appId": "App ID",
        "appIdPlaceholder": "Enter App ID",
        "appSecret": "App Secret",
        "appSecretPlaceholder": "Sensitive information will not be sent to the frontend",
        "saveButton": "Save Feishu OAuth Settings"
      },
      "configureGitHubOAuthApp": {
        "title": "Configure GitHub OAuth App",
        "subTitle": "To support login and registration via GitHub.",
        "manageLink": "Click here",
        "manage": "Manage your GitHub OAuth App",
        "alert1": "Enter Homepage URL",
        "alert2": "and Authorization callback URL",
        "clientId": "GitHub Client ID",
        "clientSecret": "GitHub Client Secret",
        "clientIdPlaceholder": "Enter the ID of your registered GitHub OAuth App",
        "clientSecretPlaceholder": "Sensitive information will not be sent to the frontend",
        "saveButton": "Save GitHub OAuth Settings"
      },
      "configureLoginRegister": {
        "title": "Configure Login and Register",
        "passwordLogin": "Allow Password Login",
        "passwordRegister": "Allow Password Register",
        "emailVerification": "Email Verification Required for Password Register",
        "gitHubOAuth": "Allow Login & Register via GitHub",
        "weChatAuth": "Allow Login & Register via WeChat",
        "larkAuth": "Allow Login & Register via Lark",
        "registerEnabled": "Allow New User Registration (Disabling this will prevent any new registrations)",
        "turnstileCheck": "Enable Turnstile User Verification"
      },
      "configureSMTP": {
        "title": "Configure SMTP",
        "subTitle": "Support system email sending",
        "alert": "Please note, some email providers include your server IP address in sent emails. For non-personal use, consider using a professional email service provider.",
        "smtpServer": "SMTP Server Address",
        "smtpServerPlaceholder": "e.g., smtp.qq.com",
        "smtpPort": "SMTP Port",
        "smtpPortPlaceholder": "Default: 587",
        "smtpAccount": "SMTP Account",
        "smtpAccountPlaceholder": "Usually your email address",
        "smtpFrom": "SMTP Sender Email",
        "smtpFromPlaceholder": "Usually matches your email address",
        "smtpToken": "SMTP Access Token",
        "smtpTokenPlaceholder": "Sensitive information will not be sent to the frontend",
        "save": "Save SMTP Settings"
      },
      "configureTurnstile": {
        "title": "Configure Turnstile",
        "subTitle": "To support user verification.",
        "manageLink": "Click here",
        "manage": "Manage your Turnstile Sites, recommend selecting Invisible Widget Type.",
        "siteKey": "Turnstile Site Key",
        "siteKeyPlaceholder": "Enter your registered Turnstile Site Key",
        "secretKey": "Turnstile Secret Key",
        "secretKeyPlaceholder": "Sensitive information will not be sent to the frontend",
        "saveButton": "Save Turnstile Settings"
      },
      "configureWeChatServer": {
        "title": "Configure WeChat Server",
        "subTitle": "To support login and registration via WeChat.",
        "learnLink": "Click here",
        "learn": "Learn about WeChat Server",
        "serverAddress": "WeChat Server Server Address",
        "serverAddressPlaceholder": "e.g., https://yourdomain.com",
        "accessToken": "WeChat Server Access Token",
        "accessTokenPlaceholder": "Sensitive information will not be sent to the frontend",
        "qrCodeImage": "WeChat Official Account QR Code Image Link",
        "qrCodeImagePlaceholder": "Enter an image link",
        "saveButton": "Save WeChat Server Settings"
      },
      "generalSettings": {
        "title": "System Settings",
        "serverAddress": "Server Address",
        "serverAddressPlaceholder": "e.g., https://yourdomain.com",
        "updateServerAddress": "Update Server Address"
      },
      "title": "System Settings"
    }
  },
  "telegramPage": {
    "title": "Telegram Bot Menu",
    "createMenu": "Create",
    "reloadMenu": "Reload Menu",
    "searchPlaceholder": "Search ID and command...",
    "refresh": "Refresh",
    "online": "Online(Webhook)",
    "offline": "Offline(Polling)",
    "reloadSuccess": "Reload successful!",
    "operationSuccess": "Operation successfully completed!",
    "infoMessage": "After adding or modifying menu commands/descriptions (you do not need to reload if you have not modified commands and descriptions), you need to reload the menu to take effect. If you do not see the new menu, try killing the backend and restarting the program.",
    "id": "ID",
    "command": "Command",
    "description": "Description",
    "replyType": "Reply Type",
    "replyContent": "Reply Content",
    "action": "Action"
  },
  "token": "Token",
  "token_index": {
    "actions": "Actions",
    "cancel": "Cancel",
    "chat": "Chat",
    "close": "Close",
    "confirmDeleteToken": "Are you sure you want to delete this token?",
    "copy": "Copy",
    "createToken": "Create Token",
    "createdTime": "Created Time",
    "delete": "Delete",
    "deleteToken": "Delete Token",
    "editToken": "Edit Token",
    "enableCache": "Enable Cache (Enabling this will cache chat history to reduce cost)",
    "expiryTime": "Expiry Time",
    "invalidDate": "Invalid date",
    "name": "Name",
    "neverExpires": "Never Expires",
    "quota": "Quota",
    "quotaNote": "Note: The token's quota is only used to limit the maximum usage of the token itself, actual usage is subject to the remaining quota of the account.",
    "refresh": "Refresh",
    "remainingQuota": "Remaining Quota",
    "replaceApiAddress1": "Replace the OpenAI API base address https://api.openai.com with",
    "replaceApiAddress2": ", and you can use the key below.",
    "searchTokenName": "Search for token name...",
    "status": "Status",
    "submit": "Submit",
    "token": "Token",
    "unlimited": "Unlimited",
    "unlimitedQuota": "Unlimited Quota",
    "usedQuota": "Used Quota"
  },
  "topup": "Top-up",
  "user": "User",
  "userPage": {
    "editUser": "Edit User",
    "createUser": "Create User",
    "username": "Username",
    "usernameRequired": "Username is required",
    "displayName": "Display Name",
    "password": "Password",
    "passwordRequired": "Password is required",
    "quota": "Quota",
    "quotaMin": "Quota cannot be less than 0",
    "group": "Group",
    "groupRequired": "Group is required",
    "saveSuccess": "Saved successfully!",
    "cancel": "Cancel",
    "submit": "Submit",
    "users": "Users",
    "searchPlaceholder": "Search for user ID, username, group, display name, or email address...",
    "refresh": "Refresh",
    "operationSuccess": "Operation successfully completed!",
    "id": "ID",
    "statistics": "Statistics",
    "userRole": "User Role",
    "bind": "Bind",
    "creationTime": "Creation Time",
    "status": "Status",
    "action": "Action"
  },
  "CheckUpdatesTable": {
    "checkUpdates": "Check Updates",
    "url": "URL",
    "fetchData": "Fetch Data",
    "noUpdates": "No Updates",
    "newModels": "New Models",
    "priceChangeModels": "Price Change Models (for reference only, ignore if you have modified the prices yourself)",
    "note": "Note",
    "overwriteOrAddOnly": "You can choose to overwrite or add only new models. If you choose to overwrite, it will delete the prices of the models you added yourself and use the remote configuration completely. If you choose to add only new models, it will only add the prices of the new models.",
    "overwriteData": "Overwrite Data",
    "addNewOnly": "Add New Only",
    "cancel": "Cancel",
    "dataFormatIncorrect": "Data format is incorrect",
    "pleaseFetchData": "Please fetch data first",
    "noNewModels": "No new models",
    "operationCompleted": "Operation completed successfully!",
    "inputMultiplierChanged": "Input multiplier changed from",
    "to": "to",
    "outputMultiplierChanged": "Output multiplier changed from"
  }
}